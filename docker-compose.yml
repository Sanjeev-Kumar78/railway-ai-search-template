services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:3001}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
      - PORT=3000
    depends_on:
      - backend
    networks:
      - search-network

  backend:
    build: ./backend
    ports:
      - "3001:3001"
    env_file:
      - .env
    environment:
      - COHERE_API_KEY=${COHERE_API_KEY:-}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:password@postgres:5432/search_db}
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3001
    depends_on:
      - postgres
    networks:
      - search-network

  worker:
    build: ./worker
    env_file:
      - .env
    environment:
      - COHERE_API_KEY=${COHERE_API_KEY:-}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:password@postgres:5432/search_db}
      - BATCH_SIZE=${BATCH_SIZE:-10}
      - CHUNK_SIZE=${CHUNK_SIZE:-1000}
      - CHUNK_OVERLAP=${CHUNK_OVERLAP:-200}
    depends_on:
      - postgres
    networks:
      - search-network
    profiles:
      - tools # Only run when explicitly requested

  postgres:
    image: pgvector/pgvector:pg17
    env_file:
      - .env.docker
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-search_db}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - search-network

volumes:
  postgres_data:

networks:
  search-network:
    driver: bridge
